{"version":3,"file":"static/webpack/static/development/pages/index.js.9899d584083235d2631b.hot-update.js","sources":["webpack:///./src/components/BlogListItem.tsx"],"sourcesContent":["import Link from 'next/link';\nimport Markdown from 'react-markdown';\nimport { Article } from '../pages';\n\nfunction truncateSummary(content: string): string {\n  const excerpt = content.slice(0, 200).trimEnd();\n  for (let i = excerpt.length; i > 0; i--) {\n    if (excerpt[i] === '\\n') {\n      return excerpt.slice(0, i);\n    }\n  }\n  return excerpt + '...';\n}\n\nfunction reformatDate(fullDate: Date): string {\n  const date = new Date(fullDate);\n  return date.toDateString().slice(4);\n}\n\ninterface Props {\n  article: Article;\n}\n\nconst BlogListItem: React.FunctionComponent<Props> = ({ article }) => {\n  return (\n    <Link key={article.slug} href={{ pathname: `/blog/${article.slug}` }}>\n      <a>\n        <div className=\"article\">\n          <div className=\"article-content\">\n            <div className=\"article-hero\">\n              <div className=\"hero-text\">\n                <h2>{article.document.data.title}</h2>\n                <h3> {reformatDate(article.document.data.date)}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <style jsx>{`\n          .article-link-content {\n            display: flex;\n          }\n          .article {\n            width: 100%;\n          }\n          .article-hero {\n            background: url(${article.document.data.hero_image}) center;\n            opacity: 0.3;\n            color: #000;\n          }\n          .article-content,\n          .hero-text {\n            padding: 16px;\n          }\n        `}</style>\n      </a>\n    </Link>\n  );\n};\n\nexport default BlogListItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AA+BA;AACA;AACA;;;;A","sourceRoot":""}