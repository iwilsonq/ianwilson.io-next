{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport sort from 'fast-sort';\nimport matter from 'gray-matter';\nimport Layout from '../components/Layout';\nimport BlogList from '../components/BlogList';\nimport Meta from '../components/Meta';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Meta, {\n    description: \"Ian Wilson's Personal Developer Blog & Site\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"The Blog\"), __jsx(BlogList, {\n    articles: props.articles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  var siteConfig, context, keys, values, articles;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(import(\"../data/config.json\"));\n\n        case 2:\n          siteConfig = _context.sent;\n          context = require.context('../articles', true, /\\.md$/);\n          keys = context.keys();\n          values = keys.map(context);\n          articles = keys.map(function (key, index) {\n            var slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n            var value = values[index];\n            var document = matter(value[\"default\"]);\n            return {\n              document: document,\n              slug: slug\n            };\n          });\n          sort(articles).desc(function (a) {\n            return a.document.data.date;\n          });\n          return _context.abrupt(\"return\", _objectSpread({\n            articles: articles\n          }, siteConfig[\"default\"]));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.tsx"],"names":["sort","matter","Layout","BlogList","Meta","Index","props","articles","getInitialProps","siteConfig","context","require","keys","values","map","key","index","slug","replace","split","slice","join","value","document","desc","a","data","date"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAuC,aAAvC;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAWA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,CAAAC,KAAK;AAAA,SAClC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,WAAW,EAAC,6CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADkC;AAAA,CAApC;;AAQAF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACG,6BADH;;AAAA;AAChBC,UAAAA,UADgB;AAEhBC,UAAAA,OAFgB,GAENC,OAAO,CAACD,OAAR,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,OAArC,CAFM;AAGhBE,UAAAA,IAHgB,GAGTF,OAAO,CAACE,IAAR,EAHS;AAIhBC,UAAAA,MAJgB,GAIPD,IAAI,CAACE,GAAL,CAA8BJ,OAA9B,CAJO;AAKhBH,UAAAA,QALgB,GAKLK,IAAI,CAACE,GAAL,CACf,UAACC,GAAD,EAAcC,KAAd,EAAyC;AACvC,gBAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,gBAAMC,KAAK,GAAGT,MAAM,CAACG,KAAD,CAApB;AACA,gBAAMO,QAAQ,GAAGtB,MAAM,CAACqB,KAAK,WAAN,CAAvB;AACA,mBAAO;AACLC,cAAAA,QAAQ,EAARA,QADK;AAELN,cAAAA,IAAI,EAAJA;AAFK,aAAP;AAID,WAbc,CALK;AAqBtBjB,UAAAA,IAAI,CAACO,QAAD,CAAJ,CAAeiB,IAAf,CAAoB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACF,QAAF,CAAWG,IAAX,CAAgBC,IAApB;AAAA,WAArB;AArBsB;AAwBpBpB,YAAAA,QAAQ,EAARA;AAxBoB,aAyBjBE,UAAU,WAzBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AA6BA,eAAeJ,KAAf","sourcesContent":["import sort from 'fast-sort';\nimport matter, { GrayMatterFile } from 'gray-matter';\nimport { NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BlogList from '../components/BlogList';\nimport Meta from '../components/Meta';\n\nexport interface Article {\n  document: GrayMatterFile<any>;\n  slug: string;\n}\n\ninterface Props {\n  articles: Article[];\n}\n\nconst Index: NextPage<Props> = props => (\n  <Layout>\n    <Meta description=\"Ian Wilson's Personal Developer Blog & Site\" />\n    <h1>The Blog</h1>\n    <BlogList articles={props.articles} />\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const siteConfig = await import(`../data/config.json`);\n  const context = require.context('../articles', true, /\\.md$/);\n  const keys = context.keys();\n  const values = keys.map<{ default: string }>(context);\n  const articles = keys.map(\n    (key: string, index: number): Article => {\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.');\n      const value = values[index];\n      const document = matter(value.default);\n      return {\n        document,\n        slug,\n      };\n    }\n  );\n\n  sort(articles).desc(a => a.document.data.date);\n\n  return {\n    articles,\n    ...siteConfig.default,\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}