{"ast":null,"code":"var _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport matter from 'gray-matter';\nimport BlogList from '../components/BlogList';\nimport Layout from '../components/Layout';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"The Blog\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(BlogList, {\n  allBlogs: props.allBlogs,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\n\nIndex.getInitialProps = async function () {\n  const siteConfig = await import(`../data/config.json`);\n\n  const posts = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      const slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n      const value = values[index];\n      const document = matter(value.default);\n      return {\n        document,\n        slug\n      };\n    });\n    return data;\n  })(require.context('../articles', true, /\\.md$/));\n\n  return _objectSpread({\n    allBlogs: posts\n  }, siteConfig.default);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.js"],"names":["Link","matter","BlogList","Layout","Index","props","allBlogs","getInitialProps","siteConfig","posts","context","keys","values","map","data","key","index","slug","replace","split","slice","join","value","document","default","require"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AAAU,EAAA,QAAQ,EAAEA,KAAK,CAACC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,CADF;;AASAF,KAAK,CAACG,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,UAAU,GAAG,MAAM,OAAQ,qBAAR,CAAzB;;AACA,QAAMC,KAAK,GAAG,CAACC,OAAO,IAAI;AACxB,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,OAAT,CAAf;AACA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,KAAgB;AACpC,YAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,YAAMC,KAAK,GAAGV,MAAM,CAACI,KAAD,CAApB;AACA,YAAMO,QAAQ,GAAGtB,MAAM,CAACqB,KAAK,CAACE,OAAP,CAAvB;AACA,aAAO;AACLD,QAAAA,QADK;AAELN,QAAAA;AAFK,OAAP;AAID,KAZY,CAAb;AAaA,WAAOH,IAAP;AACD,GAjBa,EAiBXW,OAAO,CAACf,OAAR,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,OAArC,CAjBW,CAAd;;AAmBA;AACEJ,IAAAA,QAAQ,EAAEG;AADZ,KAEKD,UAAU,CAACgB,OAFhB;AAID,CAzBD;;AA2BA,eAAepB,KAAf","sourcesContent":["import Link from 'next/link';\nimport matter from 'gray-matter';\n\nimport BlogList from '../components/BlogList';\nimport Layout from '../components/Layout';\n\nconst Index = props => (\n  <Layout>\n    <h1>The Blog</h1>\n    <ul>\n      <BlogList allBlogs={props.allBlogs} />\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const siteConfig = await import(`../data/config.json`);\n  const posts = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.');\n      const value = values[index];\n      const document = matter(value.default);\n      return {\n        document,\n        slug,\n      };\n    });\n    return data;\n  })(require.context('../articles', true, /\\.md$/));\n\n  return {\n    allBlogs: posts,\n    ...siteConfig.default,\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}