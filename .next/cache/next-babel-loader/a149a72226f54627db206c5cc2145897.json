{"ast":null,"code":"var _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Markdown from 'react-markdown';\nimport matter from 'gray-matter';\nimport Layout from '../../components/Layout';\n\nconst Article = props => {\n  const markdownBody = props.content;\n  const frontmatter = props.data;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, frontmatter.title), __jsx(Markdown, {\n    source: markdownBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nArticle.getInitialProps = async function (context) {\n  const {\n    slug\n  } = context.query;\n  const content = await import(`../../articles/${slug}.md`);\n  const config = await import(`../../data/config.json`);\n  const data = matter(content.default);\n  return _objectSpread({\n    siteTitle: config.title\n  }, data);\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[slug].js"],"names":["Markdown","matter","Layout","Article","props","markdownBody","content","frontmatter","data","title","getInitialProps","context","slug","query","config","default","siteTitle"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,IAA1B;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACE,KAAjB,CADF,EAEE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAXD;;AAaAF,OAAO,CAACO,eAAR,GAA0B,gBAAeC,OAAf,EAAwB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,KAAzB;AACA,QAAMP,OAAO,GAAG,MAAM,OAAQ,kBAAiBM,IAAK,KAA9B,CAAtB;AACA,QAAME,MAAM,GAAG,MAAM,OAAQ,wBAAR,CAArB;AACA,QAAMN,IAAI,GAAGP,MAAM,CAACK,OAAO,CAACS,OAAT,CAAnB;AACA;AACEC,IAAAA,SAAS,EAAEF,MAAM,CAACL;AADpB,KAEKD,IAFL;AAID,CATD;;AAWA,eAAeL,OAAf","sourcesContent":["import Markdown from 'react-markdown';\nimport matter from 'gray-matter';\nimport Layout from '../../components/Layout';\n\nconst Article = props => {\n  const markdownBody = props.content;\n  const frontmatter = props.data;\n  return (\n    <Layout>\n      <div>\n        <h1>{frontmatter.title}</h1>\n        <Markdown source={markdownBody} />\n      </div>\n    </Layout>\n  );\n};\n\nArticle.getInitialProps = async function(context) {\n  const { slug } = context.query;\n  const content = await import(`../../articles/${slug}.md`);\n  const config = await import(`../../data/config.json`);\n  const data = matter(content.default);\n  return {\n    siteTitle: config.title,\n    ...data,\n  };\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}