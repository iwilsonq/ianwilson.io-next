{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Markdown from 'react-markdown';\nimport matter from 'gray-matter';\nimport Layout from '../../components/Layout';\n\nvar Article = function Article(props) {\n  console.log(props);\n  var _props$data = props.data,\n      title = _props$data.title,\n      content = _props$data.content;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title), __jsx(Markdown, {\n    source: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n};\n\nArticle.getInitialProps = function _callee(context) {\n  var slug, content, _matter, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = context.query.slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(import(\"../../articles/\".concat(slug, \".md\")));\n\n        case 3:\n          content = _context.sent;\n          _matter = matter(content[\"default\"]), data = _matter.data;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[slug].tsx"],"names":["Markdown","matter","Layout","Article","props","console","log","data","title","content","getInitialProps","context","slug","query"],"mappings":";;;;AACA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAMA,IAAMC,OAAwB,GAAG,SAA3BA,OAA2B,CAAAC,KAAK,EAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADwC,oBAEbA,KAAK,CAACG,IAFO;AAAA,MAEhCC,KAFgC,eAEhCA,KAFgC;AAAA,MAEzBC,OAFyB,eAEzBA,OAFyB;AAGxC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAXD;;AAaAN,OAAO,CAACO,eAAR,GAA0B,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,IADgB,GACPD,OAAO,CAACE,KADD,CAChBD,IADgB;AAAA;AAAA,2CAEF,gCAAyBA,IAAzB,SAFE;;AAAA;AAElBH,UAAAA,OAFkB;AAAA,oBAGPR,MAAM,CAACQ,OAAO,WAAR,CAHC,EAGhBF,IAHgB,WAGhBA,IAHgB;AAAA,2CAIjB;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAOA,eAAeJ,OAAf","sourcesContent":["import { NextPage, NextPageContext } from 'next';\nimport Markdown from 'react-markdown';\nimport matter, { GrayMatterFile } from 'gray-matter';\nimport Layout from '../../components/Layout';\n\ninterface Props {\n  data: { [key: string]: any };\n}\n\nconst Article: NextPage<Props> = props => {\n  console.log(props);\n  const { title, content } = props.data;\n  return (\n    <Layout>\n      <div>\n        <h1>{title}</h1>\n        <Markdown source={content} />\n      </div>\n    </Layout>\n  );\n};\n\nArticle.getInitialProps = async function(context: NextPageContext) {\n  const { slug } = context.query;\n  const content = await import(`../../articles/${slug}.md`);\n  const { data } = matter(content.default);\n  return { data };\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}