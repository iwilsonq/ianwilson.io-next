{"ast":null,"code":"var _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/Layout';\n\nconst Article = props => {\n  const markdownBody = props.content;\n  const frontmatter = props.data;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, frontmatter.title), __jsx(\"div\", {\n    className: \"jsx-2647703310\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: markdownBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2647703310\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pYW53aWxzb24vdWktd29ya3NwYWNlL2lhbndpbHNvbi5pby1uZXh0L3NyYy9wYWdlcy9ibG9nL1tpZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYXlCLEFBRytCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixDQWQzQix3QkFlQSxNQVhhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2lhbndpbHNvbi91aS13b3Jrc3BhY2UvaWFud2lsc29uLmlvLW5leHQvc3JjL3BhZ2VzL2Jsb2cvW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTGF5b3V0JztcblxuY29uc3QgQXJ0aWNsZSA9IHByb3BzID0+IHtcbiAgY29uc3QgbWFya2Rvd25Cb2R5ID0gcHJvcHMuY29udGVudDtcbiAgY29uc3QgZnJvbnRtYXR0ZXIgPSBwcm9wcy5kYXRhO1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+e2Zyb250bWF0dGVyLnRpdGxlfTwvaDE+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XG4gICAgICAgIDxNYXJrZG93biBzb3VyY2U9e21hcmtkb3duQm9keX0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuXG5BcnRpY2xlLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgLy8gY29udGV4dCBjb250YWlucyB0aGUgcXVlcnkgcGFyYW1cbiAgY29uc3QgeyBzbHVnIH0gPSBjb250ZXh0LnF1ZXJ5O1xuICAvLyBncmFiIHRoZSBmaWxlIGluIHRoZSBwb3N0cyBkaXIgYmFzZWQgb24gdGhlIHNsdWdcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IGltcG9ydChgLi4vLi4vYXJ0aWNsZXMvJHtzbHVnfS5tZGApO1xuICAvLyBhbHNvIGdyYWIgdGhlIGNvbmZpZyBmaWxlIHNvIHdlIGNhbiBwYXNzIGRvd24gc2l0ZVRpdGxlXG4gIGNvbnN0IGNvbmZpZyA9IGF3YWl0IGltcG9ydChgLi4vLi4vZGF0YS9jb25maWcuanNvbmApO1xuICAvL2dyYXktbWF0dGVyIHBhcnNlcyB0aGUgeWFtbCBmcm9udG1hdHRlciBmcm9tIHRoZSBtZCBib2R5XG4gIGNvbnN0IGRhdGEgPSBtYXR0ZXIoY29udGVudC5kZWZhdWx0KTtcbiAgcmV0dXJuIHtcbiAgICBzaXRlVGl0bGU6IGNvbmZpZy50aXRsZSxcbiAgICAuLi5kYXRhLFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXJ0aWNsZTtcbiJdfQ== */\\n/*@ sourceURL=/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[id].js */\"));\n};\n\nArticle.getInitialProps = async function (context) {\n  // context contains the query param\n  const {\n    slug\n  } = context.query; // grab the file in the posts dir based on the slug\n\n  const content = await import(`../../articles/${slug}.md`); // also grab the config file so we can pass down siteTitle\n\n  const config = await import(`../../data/config.json`); //gray-matter parses the yaml frontmatter from the md body\n\n  const data = matter(content.default);\n  return _objectSpread({\n    siteTitle: config.title\n  }, data);\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/blog/[id].js"],"names":["useRouter","Markdown","Layout","Article","props","markdownBody","content","frontmatter","data","title","getInitialProps","context","slug","query","config","matter","default","siteTitle"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,IAA1B;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACE,KAAjB,CADF,EAEE;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAAA;AAAA;AAAA,6gFADF;AA4BD,CA/BD;;AAiCAF,OAAO,CAACO,eAAR,GAA0B,gBAAeC,OAAf,EAAwB;AAChD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,KAAzB,CAFgD,CAGhD;;AACA,QAAMP,OAAO,GAAG,MAAM,OAAQ,kBAAiBM,IAAK,KAA9B,CAAtB,CAJgD,CAKhD;;AACA,QAAME,MAAM,GAAG,MAAM,OAAQ,wBAAR,CAArB,CANgD,CAOhD;;AACA,QAAMN,IAAI,GAAGO,MAAM,CAACT,OAAO,CAACU,OAAT,CAAnB;AACA;AACEC,IAAAA,SAAS,EAAEH,MAAM,CAACL;AADpB,KAEKD,IAFL;AAID,CAbD;;AAeA,eAAeL,OAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/Layout';\n\nconst Article = props => {\n  const markdownBody = props.content;\n  const frontmatter = props.data;\n  return (\n    <Layout>\n      <h1>{frontmatter.title}</h1>\n      <div className=\"markdown\">\n        <Markdown source={markdownBody} />\n      </div>\n      <style jsx global>{`\n        .markdown {\n          font-family: 'Arial';\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nArticle.getInitialProps = async function(context) {\n  // context contains the query param\n  const { slug } = context.query;\n  // grab the file in the posts dir based on the slug\n  const content = await import(`../../articles/${slug}.md`);\n  // also grab the config file so we can pass down siteTitle\n  const config = await import(`../../data/config.json`);\n  //gray-matter parses the yaml frontmatter from the md body\n  const data = matter(content.default);\n  return {\n    siteTitle: config.title,\n    ...data,\n  };\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}