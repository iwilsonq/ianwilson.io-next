{"ast":null,"code":"var _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport matter from 'gray-matter';\nimport Layout from '../components/Layout';\nimport BlogList from '../components/BlogList';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"The Blog\"), __jsx(BlogList, {\n  articles: props.articles,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));\n\nIndex.getInitialProps = async function () {\n  const siteConfig = await import(`../data/config.json`);\n\n  const context = require.context('../articles', true, /\\.md$/);\n\n  const keys = context.keys();\n  const values = keys.map(context);\n  const articles = keys.map((key, index) => {\n    const slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n    const value = values[index];\n    const document = matter(value.default);\n    return {\n      document,\n      slug\n    };\n  });\n  articles.sort((a, b) => a.document.data.date - b.document.data.date);\n  return _objectSpread({\n    articles\n  }, siteConfig.default);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/pages/index.tsx"],"names":["matter","Layout","BlogList","Index","props","articles","getInitialProps","siteConfig","context","require","keys","values","map","key","index","slug","replace","split","slice","join","value","document","default","sort","a","b","data","date"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAuC,aAAvC;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAWA,MAAMC,KAAsB,GAAGC,KAAK,IAClC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,QAAD;AAAU,EAAA,QAAQ,EAAEA,KAAK,CAACC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOAF,KAAK,CAACG,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,UAAU,GAAG,MAAM,OAAQ,qBAAR,CAAzB;;AACA,QAAMC,OAAO,GAAGC,OAAO,CAACD,OAAR,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,OAArC,CAAhB;;AACA,QAAME,IAAI,GAAGF,OAAO,CAACE,IAAR,EAAb;AACA,QAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAA8BJ,OAA9B,CAAf;AACA,QAAMH,QAAQ,GAAGK,IAAI,CAACE,GAAL,CACf,CAACC,GAAD,EAAcC,KAAd,KAAyC;AACvC,UAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,UAAMC,KAAK,GAAGT,MAAM,CAACG,KAAD,CAApB;AACA,UAAMO,QAAQ,GAAGrB,MAAM,CAACoB,KAAK,CAACE,OAAP,CAAvB;AACA,WAAO;AACLD,MAAAA,QADK;AAELN,MAAAA;AAFK,KAAP;AAID,GAbc,CAAjB;AAeAV,EAAAA,QAAQ,CAACkB,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,QAAF,CAAWK,IAAX,CAAgBC,IAAhB,GAAuBF,CAAC,CAACJ,QAAF,CAAWK,IAAX,CAAgBC,IAA/D;AACA;AACEtB,IAAAA;AADF,KAEKE,UAAU,CAACe,OAFhB;AAID,CAzBD;;AA2BA,eAAenB,KAAf","sourcesContent":["import matter, { GrayMatterFile } from 'gray-matter';\nimport { NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BlogList from '../components/BlogList';\n\nexport interface Article {\n  document: GrayMatterFile<any>;\n  slug: string;\n}\n\ninterface Props {\n  articles: Article[];\n}\n\nconst Index: NextPage<Props> = props => (\n  <Layout>\n    <h1>The Blog</h1>\n    <BlogList articles={props.articles} />\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const siteConfig = await import(`../data/config.json`);\n  const context = require.context('../articles', true, /\\.md$/);\n  const keys = context.keys();\n  const values = keys.map<{ default: string }>(context);\n  const articles = keys.map(\n    (key: string, index: number): Article => {\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.');\n      const value = values[index];\n      const document = matter(value.default);\n      return {\n        document,\n        slug,\n      };\n    }\n  );\n  articles.sort((a, b) => a.document.data.date - b.document.data.date);\n  return {\n    articles,\n    ...siteConfig.default,\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}