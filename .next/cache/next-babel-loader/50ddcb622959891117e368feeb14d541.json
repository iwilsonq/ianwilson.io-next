{"ast":null,"code":"var _jsxFileName = \"/Users/ianwilson/ui-workspace/ianwilson.io-next/src/components/CodeBlock.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Prism from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-markup\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-tsx\";\nimport \"prismjs/components/prism-reason\";\nimport \"prismjs/components/prism-rust\";\n\nconst CodeBlock = ({\n  language = '',\n  value = ''\n}) => {\n  const highlightCode = () => {\n    Prism.highlightAll();\n  };\n\n  useEffect(() => {\n    highlightCode();\n  }, [highlightCode]);\n  return __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"code\", {\n    className: `language-${language}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, value));\n};\n\nexport default CodeBlock;","map":{"version":3,"sources":["/Users/ianwilson/ui-workspace/ianwilson.io-next/src/components/CodeBlock.tsx"],"names":["useEffect","Prism","CodeBlock","language","value","highlightCode","highlightAll"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;OACOC,K;;;;;;;;;;AAEP,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAG,EAAb;AAAiBC,EAAAA,KAAK,GAAG;AAAzB,CAAD,KAAmC;AACnD,QAAMC,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,KAAK,CAACK,YAAN;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAG,YAAWF,QAAS,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CC,KAA1C,CADF,CADF;AAKD,CAdD;;AAgBA,eAAeF,SAAf","sourcesContent":["import { useEffect } from 'react';\nimport Prism from 'prismjs';\n\nconst CodeBlock = ({ language = '', value = '' }) => {\n  const highlightCode = () => {\n    Prism.highlightAll();\n  };\n\n  useEffect(() => {\n    highlightCode();\n  }, [highlightCode]);\n\n  return (\n    <pre>\n      <code className={`language-${language}`}>{value}</code>\n    </pre>\n  );\n};\n\nexport default CodeBlock;\n"]},"metadata":{},"sourceType":"module"}